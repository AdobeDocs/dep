{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/guides/developer-app/getting-started/index.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mTAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,2BADR,4BAGA,sMACA,eACE,GAAM,sBADR,wBAGA,oBACE,eAAIC,WAAW,MAAf,0GACE,eAAIA,WAAW,OACb,eAAIA,WAAW,MAAf,kGAGJ,eAAIA,WAAW,MAAf,kCACE,eAAIA,WAAW,OACb,eAAIA,WAAW,MAAf,wDACA,eAAIA,WAAW,MAAf,2DAGJ,eAAIA,WAAW,MAAf,8CAAkE,cAAGA,WAAW,KAC5E,KAAQ,IADsD,YAIpE,eACE,GAAM,kBADR,mBAGA,oBACE,eAAIA,WAAW,MAAf,oBAAwC,cAAGA,WAAW,KAClD,KAAQ,8CAD4B,gDAGxC,eAAIA,WAAW,MAAf,cAAkC,cAAGA,WAAW,KAC5C,KAAQ,mCADsB,qCAGlC,eAAIA,WAAW,MAAf,cAAkC,cAAGA,WAAW,KAC5C,KAAQ,oDADsB,sDAGlC,eAAIA,WAAW,MAAf,sBAA0C,cAAGA,WAAW,KACpD,KAAQ,qCAD8B,uCAG1C,eAAIA,WAAW,MAAf,YAAgC,cAAGA,WAAW,KAC1C,KAAQ,8BADoB,8BAAhC,kCAIF,eACE,GAAM,iDADR,kDAGA,6FAA8E,uBAAYA,WAAW,KAAvB,gBAA9E,mIAAyQ,cAAGA,WAAW,IACnR,KAAQ,0EAD6P,mBAAzQ,wGAGA,oBACE,eAAIA,WAAW,MAAf,cAAkC,uBAAYA,WAAW,MAAvB,OAAlC,sEACA,eAAIA,WAAW,MAAf,kBAAsC,uBAAYA,WAAW,MAAvB,OAAtC,wFAA8K,uBAAYA,WAAW,MAAvB,uBAA9K,SAAuP,uBAAYA,WAAW,MAAvB,iBAAvP,0BAA2U,uBAAYA,WAAW,MAAvB,kBAC3U,eAAIA,WAAW,OAAK,eAAIA,WAAW,MAAf,gBAApB,kHAEF,qBACA,oDACA,qBAAK,iBAAMA,WAAW,OAAjB,iiBAYL,4BACE,cAAGA,WAAW,eAAa,uBAAYA,WAAW,KAAvB,eAA3B,SAA2F,uBAAYA,WAAW,KAAvB,gBAA3F,qKAEF,qBACA,2DACA,qBAAK,iBAAMA,WAAW,OAAjB,6OAOL,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,cAApB,qCACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,gBAApB,+EACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,cAApB,mDACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,QAApB,kHAMNJ,EAAWK,gBAAiB","file":"component---src-pages-guides-developer-app-getting-started-index-md-7d54439ff5e6923eb1fb.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/dep/dep/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"introduction-to-the-app\"\n    }}>{`Introduction to the App`}</h1>\n    <p>{`The Experience Platform Developer app was built to assist developers who wished to develop locally with the Experience Platform API's and Monitoring and Alert's functionality.`}</p>\n    <h2 {...{\n      \"id\": \"features--benefits\"\n    }}>{`Features & Benefits`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Authentication API for generating an Adobe access token for working with the Experience Platform API's`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Added benefit of also generating the pSQL connection string for connecting to Query Service`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Standardized Postman Libraries`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Environment Template - aep-postman-enviornment.json`}</li>\n          <li parentName=\"ul\">{`Authentication Collection - aep-auth-collection.json`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Webhook challenge response when utilizing `}<a parentName=\"li\" {...{\n          \"href\": \"\"\n        }}>{`ngrok`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"pre-requisites\"\n    }}>{`Pre-requisites`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Developer App - `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/eknee/aep-developer-app\"\n        }}>{`https://github.com/eknee/aep-developer-app`}</a></li>\n      <li parentName=\"ul\">{`node.js - `}<a parentName=\"li\" {...{\n          \"href\": \"https://nodejs.org/en/download/\"\n        }}>{`https://nodejs.org/en/download/`}</a></li>\n      <li parentName=\"ul\">{`Express - `}<a parentName=\"li\" {...{\n          \"href\": \"https://expressjs.com/en/starter/installing.html\"\n        }}>{`https://expressjs.com/en/starter/installing.html`}</a></li>\n      <li parentName=\"ul\">{`@adobe/jwt-auth - `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/adobe/jwt-auth\"\n        }}>{`https://github.com/adobe/jwt-auth`}</a></li>\n      <li parentName=\"ul\">{`ngrok - `}<a parentName=\"li\" {...{\n          \"href\": \"https://ngrok.com/download\"\n        }}>{`https://ngrok.com/download`}</a>{` (or other webhook software)`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"experience-platform-auth---postman-collection\"\n    }}>{`Experience Platform Auth - Postman Collection`}</h2>\n    <p>{`To make authentication calls to any Adobe application you must have an `}<inlineCode parentName=\"p\">{`access token`}</inlineCode>{`. An access token can only be created by passing a JWT token that contains the identity of your Adobe I/O project integration (`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.adobe.io/developer-console/docs/guides/authentication/JWT/\"\n      }}>{`learn more here`}</a>{`). This API does three things for you as the developer when used with the Adobe I/O Developer App: `}</p>\n    <ol>\n      <li parentName=\"ol\">{`Creates a `}<inlineCode parentName=\"li\">{`JWT`}</inlineCode>{` locally on your machine using the Postman Environment variables `}</li>\n      <li parentName=\"ol\">{`Exchanges the `}<inlineCode parentName=\"li\">{`JWT`}</inlineCode>{` with the Adobe Identity Management Service (IMS) along with your Adobe I/O Project `}<inlineCode parentName=\"li\">{`client_id (api_key)`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`client_secret`}</inlineCode>{` and responds with an `}<inlineCode parentName=\"li\">{`access_token`}</inlineCode></li>\n      <li parentName=\"ol\"><em parentName=\"li\">{`(Optionally)`}</em>{` will generate a psql statement which you can use to authenticate with the Experience Platform Query Service`}</li>\n    </ol>\n    <br />\n    <p>{`Sample request looks like so:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`curl --location --request POST 'http://localhost:3000/auth' \\\\\n--header 'Cache-Control: no-cache' \\\\\n--header 'Content-Type: application/x-www-form-urlencoded' \\\\\n--data-urlencode 'client_id=XXXXX' \\\\\n--data-urlencode 'technical_account_id=XXXXX@techacct.adobe.com' \\\\\n--data-urlencode 'org_id=XXXXX@AdobeOrg' \\\\\n--data-urlencode 'client_secret=XXXXX' \\\\\n--data-urlencode 'private_key=XXXXX' \\\\\n--data-urlencode 'meta_scopes=ent_dataservices_sdk' \\\\\n--data-urlencode 'tenant_name=XXXXX' \\\\\n--data-urlencode 'sandbox_name=XXXXX'\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\"><inlineCode parentName=\"p\">{`tenant_name`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`sandbox_name`}</inlineCode>{` are optional to pass and only used for generating the psql statement in the response. They are not required for creating the JWT or requesting an access token`}</p>\n    </blockquote>\n    <br />\n    <p>{`Sample response will look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n    \"token_type\": \"bearer\",\n    \"access_token\": \"XXXXXXXX\",\n    \"expires_in\": 86399988,\n    \"psql\": \"psql 'sslmode=require host=XXXXX.platform-query.adobe.io port=80 dbname=prod:all user=XXXXX@AdobeOrg password=XXXXX'\"\n}\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`token_type`}</inlineCode>{` : always will be of type bearer`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`access_token`}</inlineCode>{` : used to authenticate in any API call using Adobe APIs. Expires in 24hrs`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`expires_in`}</inlineCode>{` : milliseconds until the access token expires`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`psql`}</inlineCode>{` : authentication command you can copy/paste in your terminal to work with Experience Platform Query Service`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}